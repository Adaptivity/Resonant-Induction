package resonantinduction.core;

import java.io.File;
import java.util.Arrays;

import net.minecraft.server.MinecraftServer;
import net.minecraftforge.common.Configuration;
import calclavia.lib.content.IDManager;
import calclavia.lib.utility.LanguageUtility;
import cpw.mods.fml.common.FMLCommonHandler;
import cpw.mods.fml.common.Loader;
import cpw.mods.fml.common.ModMetadata;

/** @author Calclavia */
public class Settings
{
	public static final Configuration CONFIGURATION = new Configuration(new File(Loader.instance().getConfigDir(), Reference.NAME + ".cfg"));

	/** IDs suggested by Jyzarc and Horfius */
	public static final IDManager idManager;

	static
	{
		CONFIGURATION.load();
		idManager = new IDManager(CONFIGURATION.get(Configuration.CATEGORY_GENERAL, "BlockIDPrefix", 1200).getInt(1200), CONFIGURATION.get(Configuration.CATEGORY_GENERAL, "ItemIDPrefix", 20150).getInt(20150));
		CONFIGURATION.save();
	}

	public static int getNextBlockID()
	{
		return idManager.getNextBlockID();
	}

	public static int getNextBlockID(String key)
	{
		int id = idManager.getNextBlockID();
		return Settings.CONFIGURATION.get(Configuration.CATEGORY_BLOCK, key, id).getInt(id);
	}

	public static int getNextItemID()
	{
		return idManager.getNextItemID();
	}

	public static int getNextItemID(String key)
	{
		int id = idManager.getNextItemID();
		return Settings.CONFIGURATION.get(Configuration.CATEGORY_ITEM, key, id).getInt(id);
	}

	/** Settings */
	private static boolean didLoad = false;
	public static boolean ALLOW_ENGINEERING_AUTOCRAFT = true;
	public static boolean SOUND_FXS = true;
	public static boolean SHINY_SILVER = true;
	public static int MAX_CONTRACTOR_DISTANCE = 200;

	/**
	 * Called from RI's core.
	 */
	public static void load()
	{
		CONFIGURATION.load();

		if (!didLoad)
		{
			// Config
			ALLOW_ENGINEERING_AUTOCRAFT = CONFIGURATION.get(Configuration.CATEGORY_GENERAL, "Engineering Table Autocraft", ALLOW_ENGINEERING_AUTOCRAFT).getBoolean(ALLOW_ENGINEERING_AUTOCRAFT);
			SOUND_FXS = CONFIGURATION.get(Configuration.CATEGORY_GENERAL, "Tesla Sound FXs", SOUND_FXS).getBoolean(SOUND_FXS);
			SHINY_SILVER = CONFIGURATION.get(Configuration.CATEGORY_GENERAL, "Shiny silver wires", SHINY_SILVER).getBoolean(SHINY_SILVER);
			MAX_CONTRACTOR_DISTANCE = CONFIGURATION.get(Configuration.CATEGORY_GENERAL, "Max EM Contractor Path", MAX_CONTRACTOR_DISTANCE).getInt(MAX_CONTRACTOR_DISTANCE);

			LEVITATOR_ACCELERATION = CONFIGURATION.get(Configuration.CATEGORY_GENERAL, "Levitator Item Acceleration", Settings.LEVITATOR_ACCELERATION).getDouble(Settings.LEVITATOR_ACCELERATION);
			LEVITATOR_MAX_REACH = CONFIGURATION.get(Configuration.CATEGORY_GENERAL, "Levitator Max Item Reach", Settings.LEVITATOR_MAX_REACH).getInt(Settings.LEVITATOR_MAX_REACH);
			LEVITATOR_MAX_SPEED = CONFIGURATION.get(Configuration.CATEGORY_GENERAL, "Levitator Max Item Speed", Settings.LEVITATOR_MAX_SPEED).getDouble(Settings.LEVITATOR_MAX_SPEED);
			LEVITATOR_PUSH_DELAY = CONFIGURATION.get(Configuration.CATEGORY_GENERAL, "Levitator Item Push Delay", Settings.LEVITATOR_PUSH_DELAY).getInt(Settings.LEVITATOR_PUSH_DELAY);

			didLoad = true;
		}
	}

	public static void save()
	{
		CONFIGURATION.save();
	}

	public static void setModMetadata(ModMetadata metadata, String id, String name)
	{
		setModMetadata(metadata, id, name, "");
	}

	public static void setModMetadata(ModMetadata metadata, String id, String name, String parent)
	{
		metadata.modId = id;
		metadata.name = name;
		metadata.description = LanguageUtility.getLocal("meta.resonantinduction.description");
		metadata.url = "http://calclavia.com/resonant-induction";
		metadata.logoFile = "ri_logo.png";
		metadata.version = Reference.VERSION + "." + Reference.BUILD_VERSION;
		metadata.authorList = Arrays.asList(new String[] { "Calclavia", "DarkCow" });
		metadata.credits = LanguageUtility.getLocal("meta.resonantinduction.credits");
		metadata.parent = parent;
		metadata.autogenerated = false;
	}

	public static boolean isOp(String username)
	{
		MinecraftServer theServer = FMLCommonHandler.instance().getMinecraftServerInstance();

		if (theServer != null)
		{
			return theServer.getConfigurationManager().getOps().contains(username.trim().toLowerCase());
		}

		return false;
	}

	public static int LEVITATOR_MAX_REACH = 40;
	public static int LEVITATOR_PUSH_DELAY = 5;
	public static double LEVITATOR_MAX_SPEED = .2;
	public static double LEVITATOR_ACCELERATION = .02;
}
